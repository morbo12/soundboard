name: "Build and Release"

permissions:
  contents: write

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:  
  build-job:      
    name: Build Release Packages
    runs-on: windows-latest 
    outputs:
      VERSION: ${{ steps.extract_info.outputs.VERSION }}
      NAME: ${{ steps.extract_info.outputs.NAME }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
 
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        env:
            PUB_CACHE: 'D:\a\pub_cache'
        with:
          flutter-version: '3.24.5'
          channel: 'stable'
          architecture: x64
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:'

      - name: Clean and Install Dependencies
        run: |
          flutter clean
          flutter pub get
        
      - name: Build Windows App
        run: flutter build windows --release

      - name: Build APK
        run: flutter build apk --release

      - name: Extract version and name from pubspec.yaml
        id: extract_info
        shell: pwsh
        run: |
          $name = (Get-Content pubspec.yaml | Select-String '^name: ').Line.Split(' ')[1].Trim()
          $version = (Get-Content pubspec.yaml | Select-String '^version: ').Line.Split(' ')[1].Trim()
          $version = $version -replace '\+.*$', ''
          echo "VERSION=$version" >> $env:GITHUB_OUTPUT
          echo "NAME=$name" >> $env:GITHUB_OUTPUT

      - name: Compress Archives and Rename APK
        shell: pwsh
        run: |
          mkdir -p release
          Compress-Archive -Path .\build\windows\x64\runner\Release\* -Destination "release/${{ steps.extract_info.outputs.NAME }}_${{ steps.extract_info.outputs.VERSION }}.zip"
          Move-Item -Path build\app\outputs\flutter-apk\app-release.apk -Destination "release/${{ steps.extract_info.outputs.NAME }}_${{ steps.extract_info.outputs.VERSION }}.apk"

      - name: Determine Release Type
        id: release_type
        run: |
          if ('${{ github.ref }}' -eq 'refs/heads/main') {
            echo "IS_PRERELEASE=false" >> $env:GITHUB_OUTPUT
          } else {
            echo "IS_PRERELEASE=true" >> $env:GITHUB_OUTPUT
          }

      - name: "Archive artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: release-soundboard-${{ steps.extract_info.outputs.VERSION }}
          path: "release"
      - name: Get Changelog  Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          validation_level: warn
          version: ${{ steps.extract_info.outputs.VERSION }}
          path: ./CHANGELOG.md
  
      - name: Publish archives and packages
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ steps.changelog_reader.outputs.version }}
          tag_name: "v${{ steps.changelog_reader.outputs.version }}"
          body: ${{ steps.changelog_reader.outputs.changes }}
          prerelease: ${{ steps.changelog_reader.outputs.status == 'prereleased' }}
          draft: ${{ steps.changelog_reader.outputs.status == 'unreleased' }}
          files: release*/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  